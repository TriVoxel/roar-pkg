#!/bin/bash
## This is a program written by TriVoxel (https://trivoxel.page.link/site)
## Made for LionOS - A free, open source Linux distribution (https://lionos.org)
## Installs programs using a custom version of the Apt software.

### Variables ###
self=$0
var=$1
pkg=$(echo "$*" | cut -d " " -f2-)
cnf="0"

### Functions ###
.elevPriv () { #increases privileges if not root
  if [ $EUID != 0 ]; then
    sudo "$self" "$@"
    #exit $?
  fi
}
.noConfirm () {
  if [ $cnf = 1 ]; then
    echo "-y"
  fi
}
.setConfirm () {
  cnf="1"
}
.fetch () {
  .elevPriv
  sudo apt-get install $(.noConfirm) $pkg
}
.fetchList () {
  apt-get list --installed
}
.update () {
  .elevPriv
  sudo apt-get update $(.noConfirm) $pkg
}
.upgrade () {
  .elevPriv
  sudo apt-get upgrade $(.noConfirm)
}
.autoRemove () {
  .elevPriv
  sudo apt-get autoremove $(.noConfirm) $pkg
}
.purge () {
  .elevPriv
  sudo apt-get purge $(.noConfirm) $pkg
}
.addRepo () {
  .elevPriv
  sudo apt-add-repository $(.noConfirm) $pkg
}
.remRepo () {
  .elevPriv
  sudo add-apt-repository --remove $(.noConfirm) $pkg
}
.version () {
  echo "\
   /\\_/\\
  ( o.o )      Roar Version 1.0
    / \\   __   Developed by TriVoxel
   (___)_/  '"
}

### Logic ###
case "$1" in
  -H|-h|--help)
    if [ -z $2 ]; then
      echo "Roar help:
Usage: roar <operation+option> [...]
  Example: roar -Ugn
Operations:
  roar {-H --help} <operation>     >> displays help dialogue
  roar {-V --version}              >> displays version information
  roar {-F --fetch} <package(s)>   >> installs selected package(s)
  roar {-R --remove} <package(s)>  >> removes selected package(s)
  roar {-U --update}               >> updates the system
  roar {-G --upgrade}              >> upgrades the system
  roar {-S --search} <query>       >> searches repositories for package(s)
  roar {-O --repo} <ppa>           >> adds Ubuntu/Debian PPAs
Use 'roar -H <operation>' for extended information on it
  Example: roar -H --fetch"
    else
      case "$2" in
        -H|--help)
          echo "Usage: roar {-H --help} <operation>
Description: displays help dialogue.
Options:
  roar -H {-H --help}              >> displays help dialogue for 'help' operation
  roar -H {-V --version}           >> displays help dialogue for 'version' operation
  roar -H {-F --fetch}             >> displays help dialogue for 'fetch' operation
  roar -H {-R --remove}            >> displays help dialogue for 'remove' operation
  roar -H {-U --update}            >> displays help dialogue for 'update' operation
  roar -H {-G --upgrade}           >> displays help dialogue for 'upgrade' operation
  roar -H {-S --search}            >> displays help dialogue for 'search' operation
  roar -H {-O --repo}              >> displays help dialogue for 'repo' operation"
          ;;
        -V|--version)
          echo "Usage: roar {-V --version}
Description: displays version information"
          ;;
        -F|--fetch)
          echo "Usage: roar {-F*} <package(s)>
Description: installs selected package(s)
Options:
  roar -Fn <package(s)>            >> don't require consent to install packages
  roar -Fe <package(s)>            >> reinstall packages
  roar -Fl                         >> lists packages"
          ;;
        -R|--remove)
          echo "Usage: roar {-R*} <package(s)>
Description: removes selected package(s)
Options:
  roar -Rn <package(s)>            >> don't require consent to install packages
  roar -Rp <package(s)>            >> purge all of package(s) files and directories
  roar -Rpn <package(s)>           >> purge all of package(s) files and directories without consent
  roar -Ro <package(s)> <ppa>      >> removes selected PPA
  roar -Ron <package(s)>           >> removes selected PPA without consent"
          ;;
        -U|--upgrade)
          echo "Usage: roar {-U*} <package(s)>
Description: updates the system
Options:
  roar -Un                         >> don't require consent to download updates
  roar -Ug                         >> update the system then install updates
  roar -Ugn                        >> update the system then install updates without consent"
          ;;
        -G|--upgrade)
          echo "Usage: roar {-G*} <package(s)>
Description: upgrades the system
Options:
  roar -Gn                         >> don't require confirmation to install updates
  roar -Gu                         >> update the system then install updates
  roar -Gun                        >> update the system then install updates without consent"
          ;;
        -S|--search)
          echo "Usage: roar {-S} <query>
Description: searches repositories for packages."
          ;;
        -O|--repo)
          echo "Usage: roar {-O*} <ppa>
Description: adds Debian/Ubuntu PPAs
Options:
  roar -On                         >> adds Debian/Ubuntu PPA without consent
  roar -Or                         >> removes selected PPA
  roar -Orn                        >> removes selected PPA without consent"
          ;;
      esac
    fi
    ;;
  -V|-v|--version)
    .version
    ;;
  # Fetch
  -F|--fetch)
    .fetch
    ;;
  -Fn)
    .setConfirm && .fetch
    ;;
  -Fl)
    .fetchList
    ;;
  # Repo
  -O|--repo)
    .addRepo
    ;;
  -On)
    .setConfirm && .addRepo
    ;;
  -Or)
    .remRepo
    ;;
  -Orn)
    .setConfirm && .remRepo
    ;;
  # Remove
  -R|--remove)
    .remove
    ;;
  -Rn)
    .setConfirm && .remove
    ;;
  -Rp)
    .purge
    ;;
  -Rpn)
    .setConfirm && .purge
    ;;
  -Ro)
    .remRepo
    ;;
  -Ron)
    .setConfirm && .remRepo
    ;;
  # Update
  -U|--update)
    .update
    ;;
  -Un)
    .setConfirm && .update
    ;;
  # Upgrade
  -G|--upgrade)
    .upgrade
    ;;
  -Gn)
    .setConfirm && .upgrade
    ;;
  # Update & Upgrade
  -Ug|-Gu)
    .update && .upgrade
    ;;
  -Ugn|-Gun)
    .setConfirm && .update && .upgrade
    ;;
  --debug)
    .setConfirm && echo $(.noConfirm)
    ;;
  #-T|-t|--test)
  #  echo "Output" "$pkg"
  #  ;;
esac
exit
